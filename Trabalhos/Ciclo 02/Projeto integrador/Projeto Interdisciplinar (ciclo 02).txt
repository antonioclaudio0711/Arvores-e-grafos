PROJETO INTEGRADOR : PLATHEIA
INTEGRANTES: Antônio Cláudio, Cássio da Costa, Pedro Henrique Pereira, Rita de Cássia


#include <stdio.h>
#include <stdbool.h>

// Estrutura para representar um evento
typedef struct {
    int id;
    char nome[50];
    int quantidade_reportes;
    char reportes[10][50];
} Evento;

// Função para realizar a pesquisa sequencial por reporte dentro de um evento
bool buscarReporte(Evento evento, char reporte[]) {
    for (int i = 0; i < evento.quantidade_reportes; i++) {
        if (strcmp(evento.reportes[i], reporte) == 0) {
            return true; // Reporte encontrado
        }
    }
    return false; // Reporte não encontrado
}

// Função para realizar a pesquisa sequencial de eventos e por reporte
bool pesquisarEvento(Evento eventos[], int quantidade_eventos, int evento_id, char reporte[]) {
    for (int i = 0; i < quantidade_eventos; i++) {
        if (eventos[i].id == evento_id) {
            return buscarReporte(eventos[i], reporte);
        }
    }
    return false; // Evento não encontrado
}

int main() {
    // Exemplo de dados de eventos
    Evento eventos[] = {
        {1, "Evento 1", 3, {"Reporte A", "Reporte B", "Reporte C"}},
        {2, "Evento 2", 2, {"Reporte X", "Reporte Y"}},
        {3, "Evento 3", 4, {"Reporte P", "Reporte Q", "Reporte R", "Reporte S"}},
    };
    int quantidade_eventos = sizeof(eventos) / sizeof(eventos[0]);

    // Exemplo de pesquisa sequencial de eventos e por reporte
    int evento_id = 2;
    char reporte[] = "Reporte Y";
    bool encontrado = pesquisarEvento(eventos, quantidade_eventos, evento_id, reporte);

    if (encontrado) {
        printf("O reporte '%s' foi encontrado no evento de ID %d.\n", reporte, evento_id);
    } else {
        printf("O reporte '%s' não foi encontrado no evento de ID %d.\n", reporte, evento_id);
    }

    return 0;
}
